# In this module is defined the Complex data type
# and its methods, functions and constants.
#
module complex;

use module std::lib;
use module std::lib.io;

complex <- object {
    private re : real;
    private im : real;

    # complex object constructor
    let static .(re, im) : real -> real
        = complex { re; im };
        
    # complex addition operation
    let static +(c1, c2) : complex -> complex
        = complex { (c1.re + c2.re); (c1.im + c2.im) };

    # complex subtraction operation
    let static -(c1, c2) : complex -> complex
        = complex { (c1.re - c2.re); (c1.im - c2.im) };

    # complex multiplication operation
    let static *(c1, c2) : complex -> complex
        = complex { ((c1.re * c2.re) - (c1.im * c2.im)); ((c1.re * c2.im) - (c1.im * c2.re)) };

    # complex division operation
    let static /(c1, c2) : complex -> complex
        = ;

    let static !(c1) : complex -> complex
        = complex { c1.re; -c1.im };
}